{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\vscodeProjects\\\\Stocker\\\\src\\\\components\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Table, Thead, Tbody, Tr, Th, Td, Heading, VStack, Text, Badge } from \"@chakra-ui/react\";\nimport { db } from \"../config/firebase\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport yahooFinance from \"yahoo-finance2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchLeaderboardData();\n  }, []);\n  const calculatePortfolioValue = async stocks => {\n    let totalValue = 0;\n    let initialValue = 0;\n    for (const stock of stocks) {\n      try {\n        const quote = await yahooFinance.quote(stock.symbol);\n        totalValue += quote.regularMarketPrice;\n        initialValue += stock.purchasePrice;\n      } catch (error) {\n        console.error(`Error fetching quote for ${stock.symbol}:`, error);\n      }\n    }\n    return {\n      currentValue: totalValue,\n      initialValue: initialValue,\n      percentageGain: (totalValue - initialValue) / initialValue * 100\n    };\n  };\n  const fetchLeaderboardData = async () => {\n    try {\n      const usersSnapshot = await getDocs(collection(db, \"users\"));\n      const stocksSnapshot = await getDocs(collection(db, \"stocks\"));\n      const stocksByUser = {};\n      stocksSnapshot.forEach(doc => {\n        const stock = doc.data();\n        if (!stocksByUser[stock.userId]) {\n          stocksByUser[stock.userId] = [];\n        }\n        stocksByUser[stock.userId].push(stock);\n      });\n      const leaderboardEntries = [];\n      for (const userDoc of usersSnapshot.docs) {\n        const userData = userDoc.data();\n        const userStocks = stocksByUser[userDoc.id] || [];\n        if (userStocks.length > 0) {\n          const portfolio = await calculatePortfolioValue(userStocks);\n          leaderboardEntries.push({\n            userId: userDoc.id,\n            email: userData.email,\n            ...portfolio\n          });\n        }\n      }\n\n      // Sort by percentage gain\n      leaderboardEntries.sort((a, b) => b.percentageGain - a.percentageGain);\n      setLeaderboardData(leaderboardEntries);\n    } catch (error) {\n      console.error(\"Error fetching leaderboard data:\", error);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.lg\",\n    py: 10,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"UofT Stock Trading Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Loading leaderboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        variant: \"simple\",\n        children: [/*#__PURE__*/_jsxDEV(Thead, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Trader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Portfolio Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Initial Investment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Gain/Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n          children: leaderboardData.map((entry, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: entry.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [\"$\", entry.currentValue.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [\"$\", entry.initialValue.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                colorScheme: entry.percentageGain >= 0 ? \"green\" : \"red\",\n                children: [entry.percentageGain.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, entry.userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"wgdvn95gNmZ9BtatpHKLRll9CVM=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Table","Thead","Tbody","Tr","Th","Td","Heading","VStack","Text","Badge","db","collection","getDocs","yahooFinance","jsxDEV","_jsxDEV","Leaderboard","_s","leaderboardData","setLeaderboardData","isLoading","setIsLoading","fetchLeaderboardData","calculatePortfolioValue","stocks","totalValue","initialValue","stock","quote","symbol","regularMarketPrice","purchasePrice","error","console","currentValue","percentageGain","usersSnapshot","stocksSnapshot","stocksByUser","forEach","doc","data","userId","push","leaderboardEntries","userDoc","docs","userData","userStocks","id","length","portfolio","email","sort","a","b","maxW","py","children","spacing","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","entry","index","toFixed","colorScheme","_c","$RefreshReg$"],"sources":["C:/workspace/vscodeProjects/Stocker/src/components/Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Heading,\r\n  VStack,\r\n  Text,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport { db } from \"../config/firebase\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport yahooFinance from \"yahoo-finance2\";\r\n\r\nfunction Leaderboard() {\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchLeaderboardData();\r\n  }, []);\r\n\r\n  const calculatePortfolioValue = async (stocks) => {\r\n    let totalValue = 0;\r\n    let initialValue = 0;\r\n\r\n    for (const stock of stocks) {\r\n      try {\r\n        const quote = await yahooFinance.quote(stock.symbol);\r\n        totalValue += quote.regularMarketPrice;\r\n        initialValue += stock.purchasePrice;\r\n      } catch (error) {\r\n        console.error(`Error fetching quote for ${stock.symbol}:`, error);\r\n      }\r\n    }\r\n\r\n    return {\r\n      currentValue: totalValue,\r\n      initialValue: initialValue,\r\n      percentageGain: ((totalValue - initialValue) / initialValue) * 100,\r\n    };\r\n  };\r\n\r\n  const fetchLeaderboardData = async () => {\r\n    try {\r\n      const usersSnapshot = await getDocs(collection(db, \"users\"));\r\n      const stocksSnapshot = await getDocs(collection(db, \"stocks\"));\r\n\r\n      const stocksByUser = {};\r\n      stocksSnapshot.forEach((doc) => {\r\n        const stock = doc.data();\r\n        if (!stocksByUser[stock.userId]) {\r\n          stocksByUser[stock.userId] = [];\r\n        }\r\n        stocksByUser[stock.userId].push(stock);\r\n      });\r\n\r\n      const leaderboardEntries = [];\r\n      for (const userDoc of usersSnapshot.docs) {\r\n        const userData = userDoc.data();\r\n        const userStocks = stocksByUser[userDoc.id] || [];\r\n\r\n        if (userStocks.length > 0) {\r\n          const portfolio = await calculatePortfolioValue(userStocks);\r\n          leaderboardEntries.push({\r\n            userId: userDoc.id,\r\n            email: userData.email,\r\n            ...portfolio,\r\n          });\r\n        }\r\n      }\r\n\r\n      // Sort by percentage gain\r\n      leaderboardEntries.sort((a, b) => b.percentageGain - a.percentageGain);\r\n      setLeaderboardData(leaderboardEntries);\r\n    } catch (error) {\r\n      console.error(\"Error fetching leaderboard data:\", error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxW=\"container.lg\" py={10}>\r\n      <VStack spacing={8}>\r\n        <Heading>UofT Stock Trading Leaderboard</Heading>\r\n\r\n        {isLoading ? (\r\n          <Text>Loading leaderboard data...</Text>\r\n        ) : (\r\n          <Table variant=\"simple\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Rank</Th>\r\n                <Th>Trader</Th>\r\n                <Th>Portfolio Value</Th>\r\n                <Th>Initial Investment</Th>\r\n                <Th>Gain/Loss</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {leaderboardData.map((entry, index) => (\r\n                <Tr key={entry.userId}>\r\n                  <Td>{index + 1}</Td>\r\n                  <Td>{entry.email}</Td>\r\n                  <Td>${entry.currentValue.toFixed(2)}</Td>\r\n                  <Td>${entry.initialValue.toFixed(2)}</Td>\r\n                  <Td>\r\n                    <Badge\r\n                      colorScheme={entry.percentageGain >= 0 ? \"green\" : \"red\"}\r\n                    >\r\n                      {entry.percentageGain.toFixed(2)}%\r\n                    </Badge>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        )}\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}