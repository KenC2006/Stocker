{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\vscodeProjects\\\\Stocker\\\\src\\\\components\\\\Trading.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Container, VStack, Input, Button, Text, Heading, useToast, Table, Thead, Tbody, Tr, Th, Td, InputGroup, InputRightElement, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, useColorModeValue, Badge, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Tabs, TabList, TabPanels, Tab, TabPanel, Skeleton, Alert, AlertIcon, Progress } from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { db } from \"../config/firebase\";\nimport { collection, addDoc, query, where, getDocs, deleteDoc, doc } from \"firebase/firestore\";\n\n// Cache for storing stock prices\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst priceCache = new Map();\n// Track API calls\nlet apiCallsCount = 0;\nlet lastResetTime = Date.now();\nconst API_CALL_LIMIT = 5;\nconst CACHE_DURATION = 60000; // 1 minute cache\n\nfunction Trading() {\n  _s();\n  const [symbol, setSymbol] = useState(\"\");\n  const [stockData, setStockData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n  const [portfolio, setPortfolio] = useState([]);\n  const [loadingPortfolio, setLoadingPortfolio] = useState(true);\n  const [apiCallsRemaining, setApiCallsRemaining] = useState(API_CALL_LIMIT);\n  const [cooldownTime, setCooldownTime] = useState(0);\n  const {\n    currentUser\n  } = useAuth();\n  const toast = useToast();\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n  useEffect(() => {\n    fetchPortfolio();\n    // Reset cooldown timer\n    const timer = setInterval(() => {\n      const now = Date.now();\n      if (now - lastResetTime >= 60000) {\n        apiCallsCount = 0;\n        lastResetTime = now;\n        setApiCallsRemaining(API_CALL_LIMIT);\n        setCooldownTime(0);\n      } else if (apiCallsCount >= API_CALL_LIMIT) {\n        setCooldownTime(60 - Math.floor((now - lastResetTime) / 1000));\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentUser]);\n  const checkRateLimit = () => {\n    const now = Date.now();\n    if (now - lastResetTime >= 60000) {\n      apiCallsCount = 0;\n      lastResetTime = now;\n      setApiCallsRemaining(API_CALL_LIMIT);\n      return true;\n    }\n    if (apiCallsCount >= API_CALL_LIMIT) {\n      toast({\n        title: \"Rate Limit Reached\",\n        description: \"Please wait a minute before making more requests.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true\n      });\n      return false;\n    }\n    return true;\n  };\n  const getCachedPrice = stockSymbol => {\n    const cached = priceCache.get(stockSymbol);\n    if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {\n      return cached.data;\n    }\n    return null;\n  };\n  const fetchPortfolio = async () => {\n    try {\n      const q = query(collection(db, \"stocks\"), where(\"userId\", \"==\", currentUser.uid));\n      const querySnapshot = await getDocs(q);\n      const stocks = [];\n      for (const doc of querySnapshot.docs) {\n        const stock = {\n          id: doc.id,\n          ...doc.data()\n        };\n        // Get current price for each stock\n        const priceData = await fetchStockPrice(stock.symbol);\n        if (priceData) {\n          stock.currentPrice = priceData.price;\n          stock.totalValue = priceData.price * stock.quantity;\n          stock.profitLoss = (priceData.price - stock.purchasePrice) * stock.quantity;\n          stock.profitLossPercentage = (priceData.price - stock.purchasePrice) / stock.purchasePrice * 100;\n        } else {\n          stock.currentPrice = 0;\n          stock.totalValue = 0;\n          stock.profitLoss = 0;\n          stock.profitLossPercentage = 0;\n        }\n        stocks.push(stock);\n      }\n      setPortfolio(stocks);\n    } catch (error) {\n      console.error(\"Error fetching portfolio:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to fetch portfolio\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setLoadingPortfolio(false);\n    }\n  };\n  const validateSymbol = symbol => {\n    if (!symbol || typeof symbol !== \"string\") {\n      throw new Error(\"Please enter a stock symbol\");\n    }\n    const trimmedSymbol = symbol.trim().toUpperCase();\n    if (!trimmedSymbol) {\n      throw new Error(\"Please enter a stock symbol\");\n    }\n    if (!trimmedSymbol.match(/^[A-Z]+$/)) {\n      throw new Error(\"Invalid symbol format. Please use only letters (e.g., AAPL, MSFT, GOOGL)\");\n    }\n    return trimmedSymbol;\n  };\n  const fetchStockPrice = async stockSymbol => {\n    try {\n      var _response$data, _response$data$chart, _response$data$chart$;\n      const validatedSymbol = validateSymbol(stockSymbol);\n      console.log(`Fetching price for symbol: ${validatedSymbol}`);\n\n      // Check cache first\n      const cachedData = getCachedPrice(validatedSymbol);\n      if (cachedData) {\n        console.log(\"Returning cached data:\", cachedData);\n        return cachedData;\n      }\n      console.log(\"Making API request...\");\n      const response = await axios.get(`https://query1.finance.yahoo.com/v8/finance/chart/${validatedSymbol}?interval=1d`, {\n        headers: {\n          \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\",\n          Accept: \"application/json\"\n        },\n        validateStatus: function (status) {\n          return status < 500;\n        },\n        timeout: 5000 // 5 second timeout\n      });\n      if (response.status === 404 || !((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$chart = _response$data.chart) !== null && _response$data$chart !== void 0 && (_response$data$chart$ = _response$data$chart.result) !== null && _response$data$chart$ !== void 0 && _response$data$chart$[0])) {\n        throw new Error(`Stock symbol '${validatedSymbol}' not found. Please verify the symbol is correct.`);\n      }\n      if (response.status !== 200) {\n        throw new Error(`API returned status code ${response.status}`);\n      }\n      const result = response.data.chart.result[0];\n      const quote = result.meta;\n      if (!quote.regularMarketPrice || !quote.chartPreviousClose) {\n        console.error(\"Missing required price data:\", quote);\n        throw new Error(\"Invalid price data received from API\");\n      }\n      const stockData = {\n        price: quote.regularMarketPrice,\n        change: quote.regularMarketPrice - quote.chartPreviousClose,\n        changePercent: (quote.regularMarketPrice - quote.chartPreviousClose) / quote.chartPreviousClose * 100,\n        currency: quote.currency || \"USD\",\n        exchange: quote.exchangeName || \"Unknown\",\n        timestamp: new Date(result.timestamp[result.timestamp.length - 1] * 1000).toLocaleString()\n      };\n      console.log(\"Processed stock data:\", stockData);\n\n      // Cache the result\n      priceCache.set(validatedSymbol, {\n        data: stockData,\n        timestamp: Date.now()\n      });\n      return stockData;\n    } catch (error) {\n      var _error$response;\n      console.error(\"Detailed error information:\");\n      console.error(\"Error message:\", error.message);\n      console.error(\"Error name:\", error.name);\n      if (error.response) {\n        console.error(\"Response status:\", error.response.status);\n        console.error(\"Response data:\", error.response.data);\n      }\n\n      // Provide more specific error messages\n      if (error.code === \"ECONNABORTED\") {\n        throw new Error(\"Request timed out. Please try again.\");\n      } else if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429) {\n        throw new Error(\"Rate limit exceeded. Please wait a moment and try again.\");\n      } else if (error.message.includes(\"not found\")) {\n        throw new Error(`Stock symbol '${stockSymbol}' not found. Please verify it's correct.`);\n      } else if (error.message.includes(\"Invalid symbol format\")) {\n        throw new Error(error.message);\n      } else if (error.message.includes(\"Invalid price data\")) {\n        throw new Error(\"Received invalid price data from API. Please try again.\");\n      } else if (error.code === \"ECONNREFUSED\" || error.code === \"ENOTFOUND\") {\n        throw new Error(\"Network connection error. Please check your internet connection.\");\n      } else if (error.message.includes(\"Please enter a stock symbol\")) {\n        throw new Error(error.message);\n      } else {\n        throw new Error(`Unable to fetch stock data: ${error.message}`);\n      }\n    }\n  };\n  const searchStock = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Starting stock search for:\", symbol);\n      const validatedSymbol = validateSymbol(symbol);\n      const priceData = await fetchStockPrice(validatedSymbol);\n      if (!priceData) {\n        throw new Error(\"No data received from API\");\n      }\n      console.log(\"Successfully fetched price data:\", priceData);\n      setStockData({\n        symbol: validatedSymbol,\n        ...priceData\n      });\n    } catch (error) {\n      console.error(\"Stock search error:\", error);\n      toast({\n        title: \"Error\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n      setStockData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTrade = async type => {\n    if (!stockData || !quantity) return;\n    try {\n      const tradeData = {\n        userId: currentUser.uid,\n        symbol: stockData.symbol,\n        quantity: Number(quantity),\n        purchasePrice: stockData.price,\n        tradeType: type,\n        timestamp: new Date().toISOString()\n      };\n      await addDoc(collection(db, \"stocks\"), tradeData);\n      toast({\n        title: \"Success\",\n        description: `Successfully ${type === \"buy\" ? \"bought\" : \"sold\"} ${quantity} shares of ${stockData.symbol}`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true\n      });\n      fetchPortfolio();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: `Failed to ${type} stock`,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  const handleSell = async (stockId, symbol, currentPrice, quantity) => {\n    try {\n      await deleteDoc(doc(db, \"stocks\", stockId));\n      await addDoc(collection(db, \"stocks\"), {\n        userId: currentUser.uid,\n        symbol,\n        quantity: -quantity,\n        // Negative quantity for selling\n        purchasePrice: currentPrice,\n        tradeType: \"sell\",\n        timestamp: new Date().toISOString()\n      });\n      toast({\n        title: \"Success\",\n        description: `Successfully sold ${quantity} shares of ${symbol}`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true\n      });\n      fetchPortfolio();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to sell stock\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.lg\",\n    py: 10,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        bgGradient: \"linear(to-r, blue.400, purple.500)\",\n        bgClip: \"text\",\n        fontSize: {\n          base: \"2xl\",\n          md: \"4xl\"\n        },\n        fontWeight: \"extrabold\",\n        children: \"Stock Trading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), apiCallsRemaining < API_CALL_LIMIT && /*#__PURE__*/_jsxDEV(Alert, {\n        status: \"info\",\n        borderRadius: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: \"start\",\n          spacing: 2,\n          flex: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: [\"API Calls Remaining: \", apiCallsRemaining, \" of \", API_CALL_LIMIT]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), cooldownTime > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: [\"Resets in: \", cooldownTime, \" seconds\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              value: (60 - cooldownTime) * (100 / 60),\n              size: \"sm\",\n              width: \"100%\",\n              colorScheme: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        width: \"100%\",\n        variant: \"enclosed\",\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Trade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 6,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                width: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  size: \"lg\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"Enter stock symbol (e.g., AAPL)\",\n                    value: symbol,\n                    onChange: e => setSymbol(e.target.value.toUpperCase()),\n                    onKeyPress: e => {\n                      if (e.key === \"Enter\") searchStock();\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                    width: \"4.5rem\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      h: \"1.75rem\",\n                      size: \"sm\",\n                      onClick: searchStock,\n                      isLoading: loading,\n                      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), stockData && /*#__PURE__*/_jsxDEV(Box, {\n                p: 6,\n                borderRadius: \"lg\",\n                boxShadow: \"xl\",\n                bg: bgColor,\n                border: \"1px\",\n                borderColor: borderColor,\n                width: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(VStack, {\n                  spacing: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Stat, {\n                    textAlign: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                      fontSize: \"xl\",\n                      children: stockData.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n                      fontSize: \"3xl\",\n                      children: [\"$\", stockData.price.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n                      children: [/*#__PURE__*/_jsxDEV(StatArrow, {\n                        type: stockData.change > 0 ? \"increase\" : \"decrease\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 477,\n                        columnNumber: 27\n                      }, this), Math.abs(stockData.changePercent).toFixed(2), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n                    value: quantity,\n                    min: 1,\n                    onChange: value => setQuantity(Number(value)),\n                    children: [/*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(NumberInputStepper, {\n                      children: [/*#__PURE__*/_jsxDEV(NumberIncrementStepper, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 493,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(NumberDecrementStepper, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"lg\",\n                    fontWeight: \"bold\",\n                    children: [\"Total: $\", (stockData.price * quantity).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    colorScheme: \"green\",\n                    width: \"100%\",\n                    onClick: () => handleTrade(\"buy\"),\n                    children: \"Buy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              borderRadius: \"lg\",\n              boxShadow: \"xl\",\n              bg: bgColor,\n              border: \"1px\",\n              borderColor: borderColor,\n              overflow: \"hidden\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                variant: \"simple\",\n                children: [/*#__PURE__*/_jsxDEV(Thead, {\n                  children: /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Symbol\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Purchase Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Current Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Total Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Profit/Loss\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                  children: loadingPortfolio ? /*#__PURE__*/_jsxDEV(Tr, {\n                    children: /*#__PURE__*/_jsxDEV(Td, {\n                      colSpan: 7,\n                      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                        height: \"20px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 23\n                  }, this) : portfolio.map(stock => /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Td, {\n                      children: stock.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: stock.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: [\"$\", stock.purchasePrice.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: [\"$\", stock.currentPrice.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: [\"$\", stock.totalValue.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        colorScheme: stock.profitLoss >= 0 ? \"green\" : \"red\",\n                        children: [\"$\", stock.profitLoss.toFixed(2), \" (\", stock.profitLossPercentage.toFixed(2), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        colorScheme: \"red\",\n                        size: \"sm\",\n                        onClick: () => handleSell(stock.id, stock.symbol, stock.currentPrice, stock.quantity),\n                        children: \"Sell\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 27\n                    }, this)]\n                  }, stock.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n}\n_s(Trading, \"FS6NcvUNw8gA4MSEwBLD/ahDlVo=\", false, function () {\n  return [useAuth, useToast, useColorModeValue, useColorModeValue];\n});\n_c = Trading;\nexport default Trading;\nvar _c;\n$RefreshReg$(_c, \"Trading\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","VStack","Input","Button","Text","Heading","useToast","Table","Thead","Tbody","Tr","Th","Td","InputGroup","InputRightElement","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","useColorModeValue","Badge","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","Tabs","TabList","TabPanels","Tab","TabPanel","Skeleton","Alert","AlertIcon","Progress","SearchIcon","axios","useAuth","db","collection","addDoc","query","where","getDocs","deleteDoc","doc","jsxDEV","_jsxDEV","Fragment","_Fragment","priceCache","Map","apiCallsCount","lastResetTime","Date","now","API_CALL_LIMIT","CACHE_DURATION","Trading","_s","symbol","setSymbol","stockData","setStockData","loading","setLoading","quantity","setQuantity","portfolio","setPortfolio","loadingPortfolio","setLoadingPortfolio","apiCallsRemaining","setApiCallsRemaining","cooldownTime","setCooldownTime","currentUser","toast","bgColor","borderColor","fetchPortfolio","timer","setInterval","Math","floor","clearInterval","checkRateLimit","title","description","status","duration","isClosable","getCachedPrice","stockSymbol","cached","get","timestamp","data","q","uid","querySnapshot","stocks","docs","stock","id","priceData","fetchStockPrice","currentPrice","price","totalValue","profitLoss","purchasePrice","profitLossPercentage","push","error","console","validateSymbol","Error","trimmedSymbol","trim","toUpperCase","match","_response$data","_response$data$chart","_response$data$chart$","validatedSymbol","log","cachedData","response","headers","Accept","validateStatus","timeout","chart","result","quote","meta","regularMarketPrice","chartPreviousClose","change","changePercent","currency","exchange","exchangeName","length","toLocaleString","set","_error$response","message","name","code","includes","searchStock","handleTrade","type","tradeData","userId","Number","tradeType","toISOString","handleSell","stockId","maxW","py","children","spacing","bgGradient","bgClip","fontSize","base","md","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","align","flex","value","size","width","colorScheme","variant","placeholder","onChange","e","target","onKeyPress","key","h","onClick","isLoading","p","boxShadow","bg","border","textAlign","toFixed","abs","min","overflow","isNumeric","colSpan","height","map","_c","$RefreshReg$"],"sources":["C:/workspace/vscodeProjects/Stocker/src/components/Trading.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  VStack,\r\n  Input,\r\n  Button,\r\n  Text,\r\n  Heading,\r\n  useToast,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n  useColorModeValue,\r\n  Badge,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Skeleton,\r\n  Alert,\r\n  AlertIcon,\r\n  Progress,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../config/firebase\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  deleteDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\n// Cache for storing stock prices\r\nconst priceCache = new Map();\r\n// Track API calls\r\nlet apiCallsCount = 0;\r\nlet lastResetTime = Date.now();\r\nconst API_CALL_LIMIT = 5;\r\nconst CACHE_DURATION = 60000; // 1 minute cache\r\n\r\nfunction Trading() {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [stockData, setStockData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [loadingPortfolio, setLoadingPortfolio] = useState(true);\r\n  const [apiCallsRemaining, setApiCallsRemaining] = useState(API_CALL_LIMIT);\r\n  const [cooldownTime, setCooldownTime] = useState(0);\r\n  const { currentUser } = useAuth();\r\n  const toast = useToast();\r\n\r\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n    // Reset cooldown timer\r\n    const timer = setInterval(() => {\r\n      const now = Date.now();\r\n      if (now - lastResetTime >= 60000) {\r\n        apiCallsCount = 0;\r\n        lastResetTime = now;\r\n        setApiCallsRemaining(API_CALL_LIMIT);\r\n        setCooldownTime(0);\r\n      } else if (apiCallsCount >= API_CALL_LIMIT) {\r\n        setCooldownTime(60 - Math.floor((now - lastResetTime) / 1000));\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [currentUser]);\r\n\r\n  const checkRateLimit = () => {\r\n    const now = Date.now();\r\n    if (now - lastResetTime >= 60000) {\r\n      apiCallsCount = 0;\r\n      lastResetTime = now;\r\n      setApiCallsRemaining(API_CALL_LIMIT);\r\n      return true;\r\n    }\r\n\r\n    if (apiCallsCount >= API_CALL_LIMIT) {\r\n      toast({\r\n        title: \"Rate Limit Reached\",\r\n        description: \"Please wait a minute before making more requests.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const getCachedPrice = (stockSymbol) => {\r\n    const cached = priceCache.get(stockSymbol);\r\n    if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {\r\n      return cached.data;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      const q = query(\r\n        collection(db, \"stocks\"),\r\n        where(\"userId\", \"==\", currentUser.uid)\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n      const stocks = [];\r\n      for (const doc of querySnapshot.docs) {\r\n        const stock = { id: doc.id, ...doc.data() };\r\n        // Get current price for each stock\r\n        const priceData = await fetchStockPrice(stock.symbol);\r\n        if (priceData) {\r\n          stock.currentPrice = priceData.price;\r\n          stock.totalValue = priceData.price * stock.quantity;\r\n          stock.profitLoss =\r\n            (priceData.price - stock.purchasePrice) * stock.quantity;\r\n          stock.profitLossPercentage =\r\n            ((priceData.price - stock.purchasePrice) / stock.purchasePrice) *\r\n            100;\r\n        } else {\r\n          stock.currentPrice = 0;\r\n          stock.totalValue = 0;\r\n          stock.profitLoss = 0;\r\n          stock.profitLossPercentage = 0;\r\n        }\r\n        stocks.push(stock);\r\n      }\r\n      setPortfolio(stocks);\r\n    } catch (error) {\r\n      console.error(\"Error fetching portfolio:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch portfolio\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setLoadingPortfolio(false);\r\n    }\r\n  };\r\n\r\n  const validateSymbol = (symbol) => {\r\n    if (!symbol || typeof symbol !== \"string\") {\r\n      throw new Error(\"Please enter a stock symbol\");\r\n    }\r\n\r\n    const trimmedSymbol = symbol.trim().toUpperCase();\r\n    if (!trimmedSymbol) {\r\n      throw new Error(\"Please enter a stock symbol\");\r\n    }\r\n\r\n    if (!trimmedSymbol.match(/^[A-Z]+$/)) {\r\n      throw new Error(\r\n        \"Invalid symbol format. Please use only letters (e.g., AAPL, MSFT, GOOGL)\"\r\n      );\r\n    }\r\n\r\n    return trimmedSymbol;\r\n  };\r\n\r\n  const fetchStockPrice = async (stockSymbol) => {\r\n    try {\r\n      const validatedSymbol = validateSymbol(stockSymbol);\r\n      console.log(`Fetching price for symbol: ${validatedSymbol}`);\r\n\r\n      // Check cache first\r\n      const cachedData = getCachedPrice(validatedSymbol);\r\n      if (cachedData) {\r\n        console.log(\"Returning cached data:\", cachedData);\r\n        return cachedData;\r\n      }\r\n\r\n      console.log(\"Making API request...\");\r\n      const response = await axios.get(\r\n        `https://query1.finance.yahoo.com/v8/finance/chart/${validatedSymbol}?interval=1d`,\r\n        {\r\n          headers: {\r\n            \"User-Agent\":\r\n              \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\",\r\n            Accept: \"application/json\",\r\n          },\r\n          validateStatus: function (status) {\r\n            return status < 500;\r\n          },\r\n          timeout: 5000, // 5 second timeout\r\n        }\r\n      );\r\n\r\n      if (response.status === 404 || !response.data?.chart?.result?.[0]) {\r\n        throw new Error(\r\n          `Stock symbol '${validatedSymbol}' not found. Please verify the symbol is correct.`\r\n        );\r\n      }\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(`API returned status code ${response.status}`);\r\n      }\r\n\r\n      const result = response.data.chart.result[0];\r\n      const quote = result.meta;\r\n\r\n      if (!quote.regularMarketPrice || !quote.chartPreviousClose) {\r\n        console.error(\"Missing required price data:\", quote);\r\n        throw new Error(\"Invalid price data received from API\");\r\n      }\r\n\r\n      const stockData = {\r\n        price: quote.regularMarketPrice,\r\n        change: quote.regularMarketPrice - quote.chartPreviousClose,\r\n        changePercent:\r\n          ((quote.regularMarketPrice - quote.chartPreviousClose) /\r\n            quote.chartPreviousClose) *\r\n          100,\r\n        currency: quote.currency || \"USD\",\r\n        exchange: quote.exchangeName || \"Unknown\",\r\n        timestamp: new Date(\r\n          result.timestamp[result.timestamp.length - 1] * 1000\r\n        ).toLocaleString(),\r\n      };\r\n\r\n      console.log(\"Processed stock data:\", stockData);\r\n\r\n      // Cache the result\r\n      priceCache.set(validatedSymbol, {\r\n        data: stockData,\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n      return stockData;\r\n    } catch (error) {\r\n      console.error(\"Detailed error information:\");\r\n      console.error(\"Error message:\", error.message);\r\n      console.error(\"Error name:\", error.name);\r\n\r\n      if (error.response) {\r\n        console.error(\"Response status:\", error.response.status);\r\n        console.error(\"Response data:\", error.response.data);\r\n      }\r\n\r\n      // Provide more specific error messages\r\n      if (error.code === \"ECONNABORTED\") {\r\n        throw new Error(\"Request timed out. Please try again.\");\r\n      } else if (error.response?.status === 429) {\r\n        throw new Error(\r\n          \"Rate limit exceeded. Please wait a moment and try again.\"\r\n        );\r\n      } else if (error.message.includes(\"not found\")) {\r\n        throw new Error(\r\n          `Stock symbol '${stockSymbol}' not found. Please verify it's correct.`\r\n        );\r\n      } else if (error.message.includes(\"Invalid symbol format\")) {\r\n        throw new Error(error.message);\r\n      } else if (error.message.includes(\"Invalid price data\")) {\r\n        throw new Error(\r\n          \"Received invalid price data from API. Please try again.\"\r\n        );\r\n      } else if (error.code === \"ECONNREFUSED\" || error.code === \"ENOTFOUND\") {\r\n        throw new Error(\r\n          \"Network connection error. Please check your internet connection.\"\r\n        );\r\n      } else if (error.message.includes(\"Please enter a stock symbol\")) {\r\n        throw new Error(error.message);\r\n      } else {\r\n        throw new Error(`Unable to fetch stock data: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchStock = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"Starting stock search for:\", symbol);\r\n\r\n      const validatedSymbol = validateSymbol(symbol);\r\n      const priceData = await fetchStockPrice(validatedSymbol);\r\n\r\n      if (!priceData) {\r\n        throw new Error(\"No data received from API\");\r\n      }\r\n\r\n      console.log(\"Successfully fetched price data:\", priceData);\r\n      setStockData({\r\n        symbol: validatedSymbol,\r\n        ...priceData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Stock search error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setStockData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTrade = async (type) => {\r\n    if (!stockData || !quantity) return;\r\n\r\n    try {\r\n      const tradeData = {\r\n        userId: currentUser.uid,\r\n        symbol: stockData.symbol,\r\n        quantity: Number(quantity),\r\n        purchasePrice: stockData.price,\r\n        tradeType: type,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      await addDoc(collection(db, \"stocks\"), tradeData);\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Successfully ${\r\n          type === \"buy\" ? \"bought\" : \"sold\"\r\n        } ${quantity} shares of ${stockData.symbol}`,\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      fetchPortfolio();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: `Failed to ${type} stock`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSell = async (stockId, symbol, currentPrice, quantity) => {\r\n    try {\r\n      await deleteDoc(doc(db, \"stocks\", stockId));\r\n      await addDoc(collection(db, \"stocks\"), {\r\n        userId: currentUser.uid,\r\n        symbol,\r\n        quantity: -quantity, // Negative quantity for selling\r\n        purchasePrice: currentPrice,\r\n        tradeType: \"sell\",\r\n        timestamp: new Date().toISOString(),\r\n      });\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Successfully sold ${quantity} shares of ${symbol}`,\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      fetchPortfolio();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to sell stock\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxW=\"container.lg\" py={10}>\r\n      <VStack spacing={8}>\r\n        <Heading\r\n          bgGradient=\"linear(to-r, blue.400, purple.500)\"\r\n          bgClip=\"text\"\r\n          fontSize={{ base: \"2xl\", md: \"4xl\" }}\r\n          fontWeight=\"extrabold\"\r\n        >\r\n          Stock Trading\r\n        </Heading>\r\n\r\n        {apiCallsRemaining < API_CALL_LIMIT && (\r\n          <Alert status=\"info\" borderRadius=\"md\">\r\n            <AlertIcon />\r\n            <VStack align=\"start\" spacing={2} flex=\"1\">\r\n              <Text>\r\n                API Calls Remaining: {apiCallsRemaining} of {API_CALL_LIMIT}\r\n              </Text>\r\n              {cooldownTime > 0 && (\r\n                <>\r\n                  <Text>Resets in: {cooldownTime} seconds</Text>\r\n                  <Progress\r\n                    value={(60 - cooldownTime) * (100 / 60)}\r\n                    size=\"sm\"\r\n                    width=\"100%\"\r\n                    colorScheme=\"blue\"\r\n                  />\r\n                </>\r\n              )}\r\n            </VStack>\r\n          </Alert>\r\n        )}\r\n\r\n        <Tabs width=\"100%\" variant=\"enclosed\">\r\n          <TabList>\r\n            <Tab>Trade</Tab>\r\n            <Tab>Portfolio</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <VStack spacing={6}>\r\n                <Box width=\"100%\">\r\n                  <InputGroup size=\"lg\">\r\n                    <Input\r\n                      placeholder=\"Enter stock symbol (e.g., AAPL)\"\r\n                      value={symbol}\r\n                      onChange={(e) => setSymbol(e.target.value.toUpperCase())}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\") searchStock();\r\n                      }}\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                      <Button\r\n                        h=\"1.75rem\"\r\n                        size=\"sm\"\r\n                        onClick={searchStock}\r\n                        isLoading={loading}\r\n                      >\r\n                        <SearchIcon />\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </Box>\r\n\r\n                {stockData && (\r\n                  <Box\r\n                    p={6}\r\n                    borderRadius=\"lg\"\r\n                    boxShadow=\"xl\"\r\n                    bg={bgColor}\r\n                    border=\"1px\"\r\n                    borderColor={borderColor}\r\n                    width=\"100%\"\r\n                  >\r\n                    <VStack spacing={4}>\r\n                      <Stat textAlign=\"center\">\r\n                        <StatLabel fontSize=\"xl\">{stockData.symbol}</StatLabel>\r\n                        <StatNumber fontSize=\"3xl\">\r\n                          ${stockData.price.toFixed(2)}\r\n                        </StatNumber>\r\n                        <StatHelpText>\r\n                          <StatArrow\r\n                            type={\r\n                              stockData.change > 0 ? \"increase\" : \"decrease\"\r\n                            }\r\n                          />\r\n                          {Math.abs(stockData.changePercent).toFixed(2)}%\r\n                        </StatHelpText>\r\n                      </Stat>\r\n\r\n                      <NumberInput\r\n                        value={quantity}\r\n                        min={1}\r\n                        onChange={(value) => setQuantity(Number(value))}\r\n                      >\r\n                        <NumberInputField />\r\n                        <NumberInputStepper>\r\n                          <NumberIncrementStepper />\r\n                          <NumberDecrementStepper />\r\n                        </NumberInputStepper>\r\n                      </NumberInput>\r\n\r\n                      <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n                        Total: ${(stockData.price * quantity).toFixed(2)}\r\n                      </Text>\r\n\r\n                      <Button\r\n                        colorScheme=\"green\"\r\n                        width=\"100%\"\r\n                        onClick={() => handleTrade(\"buy\")}\r\n                      >\r\n                        Buy\r\n                      </Button>\r\n                    </VStack>\r\n                  </Box>\r\n                )}\r\n              </VStack>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <Box\r\n                borderRadius=\"lg\"\r\n                boxShadow=\"xl\"\r\n                bg={bgColor}\r\n                border=\"1px\"\r\n                borderColor={borderColor}\r\n                overflow=\"hidden\"\r\n              >\r\n                <Table variant=\"simple\">\r\n                  <Thead>\r\n                    <Tr>\r\n                      <Th>Symbol</Th>\r\n                      <Th isNumeric>Quantity</Th>\r\n                      <Th isNumeric>Purchase Price</Th>\r\n                      <Th isNumeric>Current Price</Th>\r\n                      <Th isNumeric>Total Value</Th>\r\n                      <Th isNumeric>Profit/Loss</Th>\r\n                      <Th>Action</Th>\r\n                    </Tr>\r\n                  </Thead>\r\n                  <Tbody>\r\n                    {loadingPortfolio ? (\r\n                      <Tr>\r\n                        <Td colSpan={7}>\r\n                          <Skeleton height=\"20px\" />\r\n                        </Td>\r\n                      </Tr>\r\n                    ) : (\r\n                      portfolio.map((stock) => (\r\n                        <Tr key={stock.id}>\r\n                          <Td>{stock.symbol}</Td>\r\n                          <Td isNumeric>{stock.quantity}</Td>\r\n                          <Td isNumeric>${stock.purchasePrice.toFixed(2)}</Td>\r\n                          <Td isNumeric>${stock.currentPrice.toFixed(2)}</Td>\r\n                          <Td isNumeric>${stock.totalValue.toFixed(2)}</Td>\r\n                          <Td isNumeric>\r\n                            <Badge\r\n                              colorScheme={\r\n                                stock.profitLoss >= 0 ? \"green\" : \"red\"\r\n                              }\r\n                            >\r\n                              ${stock.profitLoss.toFixed(2)} (\r\n                              {stock.profitLossPercentage.toFixed(2)}%)\r\n                            </Badge>\r\n                          </Td>\r\n                          <Td>\r\n                            <Button\r\n                              colorScheme=\"red\"\r\n                              size=\"sm\"\r\n                              onClick={() =>\r\n                                handleSell(\r\n                                  stock.id,\r\n                                  stock.symbol,\r\n                                  stock.currentPrice,\r\n                                  stock.quantity\r\n                                )\r\n                              }\r\n                            >\r\n                              Sell\r\n                            </Button>\r\n                          </Td>\r\n                        </Tr>\r\n                      ))\r\n                    )}\r\n                  </Tbody>\r\n                </Table>\r\n              </Box>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Trading;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}