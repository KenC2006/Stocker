{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\vscodeProjects\\\\Stocker\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Container, Heading, Text, VStack, Button, useColorModeValue, Icon, SimpleGrid, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, Skeleton } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { FaChartLine, FaTrophy, FaUserCircle } from \"react-icons/fa\";\nimport { doc, getDoc, collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport axios from \"axios\";\nimport { ALPHA_VANTAGE_API_KEY } from \"../config/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [userData, setUserData] = useState(null);\n  const [portfolioStats, setPortfolioStats] = useState({\n    totalValue: 0,\n    percentageChange: 0,\n    rank: 0,\n    totalUsers: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n  const fetchStockPrice = async symbol => {\n    try {\n      var _response$data, _response$data$Global;\n      const response = await axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`);\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$Global = _response$data[\"Global Quote\"]) !== null && _response$data$Global !== void 0 && _response$data$Global[\"05. price\"]) {\n        return parseFloat(response.data[\"Global Quote\"][\"05. price\"]);\n      }\n      return 0;\n    } catch (error) {\n      console.error(`Error fetching price for ${symbol}:`, error);\n      return 0;\n    }\n  };\n  const calculatePortfolioValue = async stocks => {\n    let totalValue = 0;\n    let initialValue = 0;\n    for (const stock of stocks) {\n      const currentPrice = await fetchStockPrice(stock.symbol);\n      totalValue += currentPrice * stock.quantity;\n      initialValue += stock.purchasePrice * stock.quantity;\n    }\n    return {\n      totalValue,\n      percentageChange: initialValue > 0 ? (totalValue - initialValue) / initialValue * 100 : 0\n    };\n  };\n  const fetchUserRank = async userPortfolioValue => {\n    try {\n      const usersSnapshot = await getDocs(collection(db, \"users\"));\n      const userValues = [];\n      for (const userDoc of usersSnapshot.docs) {\n        const stocksQuery = query(collection(db, \"stocks\"), where(\"userId\", \"==\", userDoc.id));\n        const stocksSnapshot = await getDocs(stocksQuery);\n        const userStocks = stocksSnapshot.docs.map(doc => doc.data());\n        if (userStocks.length > 0) {\n          const {\n            totalValue\n          } = await calculatePortfolioValue(userStocks);\n          userValues.push(totalValue);\n        }\n      }\n\n      // Sort in descending order\n      userValues.sort((a, b) => b - a);\n      const rank = userValues.indexOf(userPortfolioValue) + 1;\n      return {\n        rank,\n        totalUsers: userValues.length\n      };\n    } catch (error) {\n      console.error(\"Error calculating rank:\", error);\n      return {\n        rank: 0,\n        totalUsers: 0\n      };\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch user data\n        const userDoc = await getDoc(doc(db, \"users\", currentUser.uid));\n        if (userDoc.exists()) {\n          setUserData(userDoc.data());\n        }\n\n        // Fetch user's stocks\n        const stocksQuery = query(collection(db, \"stocks\"), where(\"userId\", \"==\", currentUser.uid));\n        const stocksSnapshot = await getDocs(stocksQuery);\n        const userStocks = stocksSnapshot.docs.map(doc => doc.data());\n\n        // Calculate portfolio value\n        const {\n          totalValue,\n          percentageChange\n        } = await calculatePortfolioValue(userStocks);\n\n        // Calculate user's rank\n        const {\n          rank,\n          totalUsers\n        } = await fetchUserRank(totalValue);\n        setPortfolioStats({\n          totalValue,\n          percentageChange,\n          rank,\n          totalUsers\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (currentUser) {\n      fetchData();\n    }\n  }, [currentUser]);\n  const stats = [{\n    label: \"Portfolio Value\",\n    value: `$${portfolioStats.totalValue.toFixed(2)}`,\n    change: portfolioStats.percentageChange,\n    icon: FaChartLine\n  }, {\n    label: \"Current Rank\",\n    value: `#${portfolioStats.rank}`,\n    helpText: portfolioStats.totalUsers > 0 ? `Top ${(portfolioStats.rank / portfolioStats.totalUsers * 100).toFixed(0)}%` : \"No ranking\",\n    icon: FaTrophy\n  }, {\n    label: \"Active Since\",\n    value: new Date((userData === null || userData === void 0 ? void 0 : userData.createdAt) || Date.now()).toLocaleDateString(),\n    helpText: \"Trading Account\",\n    icon: FaUserCircle\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.lg\",\n    py: 10,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          bgGradient: \"linear(to-r, blue.400, purple.500)\",\n          bgClip: \"text\",\n          fontSize: {\n            base: \"2xl\",\n            md: \"4xl\"\n          },\n          fontWeight: \"extrabold\",\n          mb: 2,\n          children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: \"50px\",\n            width: \"300px\",\n            mx: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this) : `Welcome back, ${(userData === null || userData === void 0 ? void 0 : userData.firstName) || \"Trader\"}!`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), !loading && userData && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"gray.500\",\n          children: [userData.major, \" \\u2022 \", userData.studyYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: {\n          base: 1,\n          md: 3\n        },\n        spacing: 6,\n        children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(Box, {\n          bg: bgColor,\n          p: 6,\n          borderRadius: \"lg\",\n          boxShadow: \"xl\",\n          border: \"1px\",\n          borderColor: borderColor,\n          transition: \"all 0.2s\",\n          _hover: {\n            transform: \"translateY(-2px)\",\n            boxShadow: \"2xl\"\n          },\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 3,\n            align: \"stretch\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              as: stat.icon,\n              w: 6,\n              h: 6,\n              color: \"blue.500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Stat, {\n              children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                fontSize: \"sm\",\n                color: \"gray.500\",\n                children: stat.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n                fontSize: \"2xl\",\n                fontWeight: \"bold\",\n                children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: \"20px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 32\n                }, this) : stat.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), stat.change && /*#__PURE__*/_jsxDEV(StatHelpText, {\n                children: [/*#__PURE__*/_jsxDEV(StatArrow, {\n                  type: stat.change > 0 ? \"increase\" : \"decrease\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this), Math.abs(stat.change).toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), stat.helpText && /*#__PURE__*/_jsxDEV(StatHelpText, {\n                children: stat.helpText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        bg: bgColor,\n        p: 8,\n        borderRadius: \"lg\",\n        boxShadow: \"xl\",\n        border: \"1px\",\n        borderColor: borderColor,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            children: \"Ready to Trade?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"gray.500\",\n            children: \"Start trading stocks and build your portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            as: Link,\n            to: \"/trading\",\n            colorScheme: \"blue\",\n            size: \"lg\",\n            _hover: {\n              transform: \"translateY(-2px)\"\n            },\n            transition: \"all 0.2s\",\n            children: \"Start Trading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"PBZdNs2Arh17fe5RxMfaXob3Pa4=\", false, function () {\n  return [useAuth, useColorModeValue, useColorModeValue];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Heading","Text","VStack","Button","useColorModeValue","Icon","SimpleGrid","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","Skeleton","Link","useAuth","FaChartLine","FaTrophy","FaUserCircle","doc","getDoc","collection","query","where","getDocs","db","axios","ALPHA_VANTAGE_API_KEY","jsxDEV","_jsxDEV","Dashboard","_s","currentUser","userData","setUserData","portfolioStats","setPortfolioStats","totalValue","percentageChange","rank","totalUsers","loading","setLoading","bgColor","borderColor","fetchStockPrice","symbol","_response$data","_response$data$Global","response","get","data","parseFloat","error","console","calculatePortfolioValue","stocks","initialValue","stock","currentPrice","quantity","purchasePrice","fetchUserRank","userPortfolioValue","usersSnapshot","userValues","userDoc","docs","stocksQuery","id","stocksSnapshot","userStocks","map","length","push","sort","a","b","indexOf","fetchData","uid","exists","stats","label","value","toFixed","change","icon","helpText","Date","createdAt","now","toLocaleDateString","maxW","py","children","spacing","align","textAlign","bgGradient","bgClip","fontSize","base","md","fontWeight","mb","height","width","mx","fileName","_jsxFileName","lineNumber","columnNumber","firstName","color","major","studyYear","columns","stat","index","bg","p","borderRadius","boxShadow","border","transition","_hover","transform","as","w","h","type","Math","abs","size","to","colorScheme","_c","$RefreshReg$"],"sources":["C:/workspace/vscodeProjects/Stocker/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Heading,\r\n  Text,\r\n  VStack,\r\n  Button,\r\n  useColorModeValue,\r\n  Icon,\r\n  SimpleGrid,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n  Skeleton,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { FaChartLine, FaTrophy, FaUserCircle } from \"react-icons/fa\";\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../config/firebase\";\r\nimport axios from \"axios\";\r\nimport { ALPHA_VANTAGE_API_KEY } from \"../config/config\";\r\n\r\nfunction Dashboard() {\r\n  const { currentUser } = useAuth();\r\n  const [userData, setUserData] = useState(null);\r\n  const [portfolioStats, setPortfolioStats] = useState({\r\n    totalValue: 0,\r\n    percentageChange: 0,\r\n    rank: 0,\r\n    totalUsers: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n  const fetchStockPrice = async (symbol) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`\r\n      );\r\n      if (response.data?.[\"Global Quote\"]?.[\"05. price\"]) {\r\n        return parseFloat(response.data[\"Global Quote\"][\"05. price\"]);\r\n      }\r\n      return 0;\r\n    } catch (error) {\r\n      console.error(`Error fetching price for ${symbol}:`, error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const calculatePortfolioValue = async (stocks) => {\r\n    let totalValue = 0;\r\n    let initialValue = 0;\r\n\r\n    for (const stock of stocks) {\r\n      const currentPrice = await fetchStockPrice(stock.symbol);\r\n      totalValue += currentPrice * stock.quantity;\r\n      initialValue += stock.purchasePrice * stock.quantity;\r\n    }\r\n\r\n    return {\r\n      totalValue,\r\n      percentageChange:\r\n        initialValue > 0\r\n          ? ((totalValue - initialValue) / initialValue) * 100\r\n          : 0,\r\n    };\r\n  };\r\n\r\n  const fetchUserRank = async (userPortfolioValue) => {\r\n    try {\r\n      const usersSnapshot = await getDocs(collection(db, \"users\"));\r\n      const userValues = [];\r\n\r\n      for (const userDoc of usersSnapshot.docs) {\r\n        const stocksQuery = query(\r\n          collection(db, \"stocks\"),\r\n          where(\"userId\", \"==\", userDoc.id)\r\n        );\r\n        const stocksSnapshot = await getDocs(stocksQuery);\r\n        const userStocks = stocksSnapshot.docs.map((doc) => doc.data());\r\n\r\n        if (userStocks.length > 0) {\r\n          const { totalValue } = await calculatePortfolioValue(userStocks);\r\n          userValues.push(totalValue);\r\n        }\r\n      }\r\n\r\n      // Sort in descending order\r\n      userValues.sort((a, b) => b - a);\r\n      const rank = userValues.indexOf(userPortfolioValue) + 1;\r\n\r\n      return {\r\n        rank,\r\n        totalUsers: userValues.length,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error calculating rank:\", error);\r\n      return { rank: 0, totalUsers: 0 };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch user data\r\n        const userDoc = await getDoc(doc(db, \"users\", currentUser.uid));\r\n        if (userDoc.exists()) {\r\n          setUserData(userDoc.data());\r\n        }\r\n\r\n        // Fetch user's stocks\r\n        const stocksQuery = query(\r\n          collection(db, \"stocks\"),\r\n          where(\"userId\", \"==\", currentUser.uid)\r\n        );\r\n        const stocksSnapshot = await getDocs(stocksQuery);\r\n        const userStocks = stocksSnapshot.docs.map((doc) => doc.data());\r\n\r\n        // Calculate portfolio value\r\n        const { totalValue, percentageChange } = await calculatePortfolioValue(\r\n          userStocks\r\n        );\r\n\r\n        // Calculate user's rank\r\n        const { rank, totalUsers } = await fetchUserRank(totalValue);\r\n\r\n        setPortfolioStats({\r\n          totalValue,\r\n          percentageChange,\r\n          rank,\r\n          totalUsers,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (currentUser) {\r\n      fetchData();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const stats = [\r\n    {\r\n      label: \"Portfolio Value\",\r\n      value: `$${portfolioStats.totalValue.toFixed(2)}`,\r\n      change: portfolioStats.percentageChange,\r\n      icon: FaChartLine,\r\n    },\r\n    {\r\n      label: \"Current Rank\",\r\n      value: `#${portfolioStats.rank}`,\r\n      helpText:\r\n        portfolioStats.totalUsers > 0\r\n          ? `Top ${(\r\n              (portfolioStats.rank / portfolioStats.totalUsers) *\r\n              100\r\n            ).toFixed(0)}%`\r\n          : \"No ranking\",\r\n      icon: FaTrophy,\r\n    },\r\n    {\r\n      label: \"Active Since\",\r\n      value: new Date(userData?.createdAt || Date.now()).toLocaleDateString(),\r\n      helpText: \"Trading Account\",\r\n      icon: FaUserCircle,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container maxW=\"container.lg\" py={10}>\r\n      <VStack spacing={8} align=\"stretch\">\r\n        <Box textAlign=\"center\">\r\n          <Heading\r\n            bgGradient=\"linear(to-r, blue.400, purple.500)\"\r\n            bgClip=\"text\"\r\n            fontSize={{ base: \"2xl\", md: \"4xl\" }}\r\n            fontWeight=\"extrabold\"\r\n            mb={2}\r\n          >\r\n            {loading ? (\r\n              <Skeleton height=\"50px\" width=\"300px\" mx=\"auto\" />\r\n            ) : (\r\n              `Welcome back, ${userData?.firstName || \"Trader\"}!`\r\n            )}\r\n          </Heading>\r\n          {!loading && userData && (\r\n            <Text fontSize=\"lg\" color=\"gray.500\">\r\n              {userData.major} • {userData.studyYear}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n\r\n        <SimpleGrid columns={{ base: 1, md: 3 }} spacing={6}>\r\n          {stats.map((stat, index) => (\r\n            <Box\r\n              key={index}\r\n              bg={bgColor}\r\n              p={6}\r\n              borderRadius=\"lg\"\r\n              boxShadow=\"xl\"\r\n              border=\"1px\"\r\n              borderColor={borderColor}\r\n              transition=\"all 0.2s\"\r\n              _hover={{ transform: \"translateY(-2px)\", boxShadow: \"2xl\" }}\r\n            >\r\n              <VStack spacing={3} align=\"stretch\">\r\n                <Icon as={stat.icon} w={6} h={6} color=\"blue.500\" />\r\n                <Stat>\r\n                  <StatLabel fontSize=\"sm\" color=\"gray.500\">\r\n                    {stat.label}\r\n                  </StatLabel>\r\n                  <StatNumber fontSize=\"2xl\" fontWeight=\"bold\">\r\n                    {loading ? <Skeleton height=\"20px\" /> : stat.value}\r\n                  </StatNumber>\r\n                  {stat.change && (\r\n                    <StatHelpText>\r\n                      <StatArrow\r\n                        type={stat.change > 0 ? \"increase\" : \"decrease\"}\r\n                      />\r\n                      {Math.abs(stat.change).toFixed(2)}%\r\n                    </StatHelpText>\r\n                  )}\r\n                  {stat.helpText && (\r\n                    <StatHelpText>{stat.helpText}</StatHelpText>\r\n                  )}\r\n                </Stat>\r\n              </VStack>\r\n            </Box>\r\n          ))}\r\n        </SimpleGrid>\r\n\r\n        <Box\r\n          bg={bgColor}\r\n          p={8}\r\n          borderRadius=\"lg\"\r\n          boxShadow=\"xl\"\r\n          border=\"1px\"\r\n          borderColor={borderColor}\r\n          textAlign=\"center\"\r\n        >\r\n          <VStack spacing={4}>\r\n            <Heading size=\"md\">Ready to Trade?</Heading>\r\n            <Text color=\"gray.500\">\r\n              Start trading stocks and build your portfolio\r\n            </Text>\r\n            <Button\r\n              as={Link}\r\n              to=\"/trading\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              _hover={{ transform: \"translateY(-2px)\" }}\r\n              transition=\"all 0.2s\"\r\n            >\r\n              Start Trading\r\n            </Button>\r\n          </VStack>\r\n        </Box>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}