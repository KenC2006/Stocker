{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\vscodeProjects\\\\Stocker\\\\src\\\\components\\\\Trading.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Container, VStack, Input, Button, Text, Heading, useToast, Table, Thead, Tbody, Tr, Th, Td, InputGroup, InputRightElement, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, useColorModeValue, Badge, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper, Tabs, TabList, TabPanels, Tab, TabPanel, Skeleton } from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { db } from \"../config/firebase\";\nimport { collection, addDoc, query, where, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Trading() {\n  _s();\n  const [symbol, setSymbol] = useState(\"\");\n  const [stockData, setStockData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n  const [portfolio, setPortfolio] = useState([]);\n  const [loadingPortfolio, setLoadingPortfolio] = useState(true);\n  const {\n    currentUser\n  } = useAuth();\n  const toast = useToast();\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n  useEffect(() => {\n    fetchPortfolio();\n  }, [currentUser]);\n  const fetchPortfolio = async () => {\n    try {\n      const q = query(collection(db, \"stocks\"), where(\"userId\", \"==\", currentUser.uid));\n      const querySnapshot = await getDocs(q);\n      const stocks = [];\n      for (const doc of querySnapshot.docs) {\n        const stock = {\n          id: doc.id,\n          ...doc.data()\n        };\n        // Get current price for each stock\n        const currentPrice = await fetchStockPrice(stock.symbol);\n        stock.currentPrice = currentPrice;\n        stock.totalValue = currentPrice * stock.quantity;\n        stock.profitLoss = (currentPrice - stock.purchasePrice) * stock.quantity;\n        stock.profitLossPercentage = (currentPrice - stock.purchasePrice) / stock.purchasePrice * 100;\n        stocks.push(stock);\n      }\n      setPortfolio(stocks);\n    } catch (error) {\n      console.error(\"Error fetching portfolio:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to fetch portfolio\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setLoadingPortfolio(false);\n    }\n  };\n  const fetchStockPrice = async stockSymbol => {\n    try {\n      const response = await axios.get(`https://query1.finance.yahoo.com/v8/finance/chart/${stockSymbol}`);\n      return response.data.chart.result[0].meta.regularMarketPrice;\n    } catch (error) {\n      console.error(`Error fetching price for ${stockSymbol}:`, error);\n      return 0;\n    }\n  };\n  const searchStock = async () => {\n    if (!symbol) return;\n    setLoading(true);\n    try {\n      const response = await axios.get(`https://query1.finance.yahoo.com/v8/finance/chart/${symbol}`);\n      const data = response.data.chart.result[0];\n      setStockData({\n        symbol: symbol.toUpperCase(),\n        price: data.meta.regularMarketPrice,\n        change: data.meta.regularMarketChange,\n        changePercent: data.meta.regularMarketChangePercent\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Invalid stock symbol or API error\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n      setStockData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTrade = async type => {\n    if (!stockData || !quantity) return;\n    try {\n      const tradeData = {\n        userId: currentUser.uid,\n        symbol: stockData.symbol,\n        quantity: Number(quantity),\n        purchasePrice: stockData.price,\n        tradeType: type,\n        timestamp: new Date().toISOString()\n      };\n      await addDoc(collection(db, \"stocks\"), tradeData);\n      toast({\n        title: \"Success\",\n        description: `Successfully ${type === \"buy\" ? \"bought\" : \"sold\"} ${quantity} shares of ${stockData.symbol}`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true\n      });\n      fetchPortfolio();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: `Failed to ${type} stock`,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  const handleSell = async (stockId, symbol, currentPrice, quantity) => {\n    try {\n      await deleteDoc(doc(db, \"stocks\", stockId));\n      await addDoc(collection(db, \"stocks\"), {\n        userId: currentUser.uid,\n        symbol,\n        quantity: -quantity,\n        // Negative quantity for selling\n        purchasePrice: currentPrice,\n        tradeType: \"sell\",\n        timestamp: new Date().toISOString()\n      });\n      toast({\n        title: \"Success\",\n        description: `Successfully sold ${quantity} shares of ${symbol}`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true\n      });\n      fetchPortfolio();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to sell stock\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.lg\",\n    py: 10,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        bgGradient: \"linear(to-r, blue.400, purple.500)\",\n        bgClip: \"text\",\n        fontSize: {\n          base: \"2xl\",\n          md: \"4xl\"\n        },\n        fontWeight: \"extrabold\",\n        children: \"Stock Trading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        width: \"100%\",\n        variant: \"enclosed\",\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Trade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 6,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                width: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  size: \"lg\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"Enter stock symbol (e.g., AAPL)\",\n                    value: symbol,\n                    onChange: e => setSymbol(e.target.value.toUpperCase()),\n                    onKeyPress: e => {\n                      if (e.key === \"Enter\") searchStock();\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                    width: \"4.5rem\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      h: \"1.75rem\",\n                      size: \"sm\",\n                      onClick: searchStock,\n                      isLoading: loading,\n                      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), stockData && /*#__PURE__*/_jsxDEV(Box, {\n                p: 6,\n                borderRadius: \"lg\",\n                boxShadow: \"xl\",\n                bg: bgColor,\n                border: \"1px\",\n                borderColor: borderColor,\n                width: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(VStack, {\n                  spacing: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Stat, {\n                    textAlign: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                      fontSize: \"xl\",\n                      children: stockData.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n                      fontSize: \"3xl\",\n                      children: [\"$\", stockData.price.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n                      children: [/*#__PURE__*/_jsxDEV(StatArrow, {\n                        type: stockData.change > 0 ? \"increase\" : \"decrease\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 27\n                      }, this), Math.abs(stockData.changePercent).toFixed(2), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n                    value: quantity,\n                    min: 1,\n                    onChange: value => setQuantity(Number(value)),\n                    children: [/*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(NumberInputStepper, {\n                      children: [/*#__PURE__*/_jsxDEV(NumberIncrementStepper, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(NumberDecrementStepper, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"lg\",\n                    fontWeight: \"bold\",\n                    children: [\"Total: $\", (stockData.price * quantity).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    colorScheme: \"green\",\n                    width: \"100%\",\n                    onClick: () => handleTrade(\"buy\"),\n                    children: \"Buy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              borderRadius: \"lg\",\n              boxShadow: \"xl\",\n              bg: bgColor,\n              border: \"1px\",\n              borderColor: borderColor,\n              overflow: \"hidden\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                variant: \"simple\",\n                children: [/*#__PURE__*/_jsxDEV(Thead, {\n                  children: /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Symbol\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Purchase Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Current Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Total Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      isNumeric: true,\n                      children: \"Profit/Loss\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                  children: loadingPortfolio ? /*#__PURE__*/_jsxDEV(Tr, {\n                    children: /*#__PURE__*/_jsxDEV(Td, {\n                      colSpan: 7,\n                      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                        height: \"20px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this) : portfolio.map(stock => /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Td, {\n                      children: stock.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: stock.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: [\"$\", stock.purchasePrice.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: [\"$\", stock.currentPrice.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: [\"$\", stock.totalValue.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      isNumeric: true,\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        colorScheme: stock.profitLoss >= 0 ? \"green\" : \"red\",\n                        children: [\"$\", stock.profitLoss.toFixed(2), \" (\", stock.profitLossPercentage.toFixed(2), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 344,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        colorScheme: \"red\",\n                        size: \"sm\",\n                        onClick: () => handleSell(stock.id, stock.symbol, stock.currentPrice, stock.quantity),\n                        children: \"Sell\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 27\n                    }, this)]\n                  }, stock.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(Trading, \"YOO9lznmnv8sNWyw1VPvtVGQqxI=\", false, function () {\n  return [useAuth, useToast, useColorModeValue, useColorModeValue];\n});\n_c = Trading;\nexport default Trading;\nvar _c;\n$RefreshReg$(_c, \"Trading\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","VStack","Input","Button","Text","Heading","useToast","Table","Thead","Tbody","Tr","Th","Td","InputGroup","InputRightElement","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","useColorModeValue","Badge","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","Tabs","TabList","TabPanels","Tab","TabPanel","Skeleton","SearchIcon","axios","useAuth","db","collection","addDoc","query","where","getDocs","deleteDoc","jsxDEV","_jsxDEV","Trading","_s","symbol","setSymbol","stockData","setStockData","loading","setLoading","quantity","setQuantity","portfolio","setPortfolio","loadingPortfolio","setLoadingPortfolio","currentUser","toast","bgColor","borderColor","fetchPortfolio","q","uid","querySnapshot","stocks","doc","docs","stock","id","data","currentPrice","fetchStockPrice","totalValue","profitLoss","purchasePrice","profitLossPercentage","push","error","console","title","description","status","duration","isClosable","stockSymbol","response","get","chart","result","meta","regularMarketPrice","searchStock","toUpperCase","price","change","regularMarketChange","changePercent","regularMarketChangePercent","handleTrade","type","tradeData","userId","Number","tradeType","timestamp","Date","toISOString","handleSell","stockId","maxW","py","children","spacing","bgGradient","bgClip","fontSize","base","md","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","width","variant","size","placeholder","value","onChange","e","target","onKeyPress","key","h","onClick","isLoading","p","borderRadius","boxShadow","bg","border","textAlign","toFixed","Math","abs","min","colorScheme","overflow","isNumeric","colSpan","height","map","_c","$RefreshReg$"],"sources":["C:/workspace/vscodeProjects/Stocker/src/components/Trading.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  VStack,\r\n  Input,\r\n  Button,\r\n  Text,\r\n  Heading,\r\n  useToast,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n  useColorModeValue,\r\n  Badge,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Skeleton,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../config/firebase\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\n\r\nfunction Trading() {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [stockData, setStockData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [loadingPortfolio, setLoadingPortfolio] = useState(true);\r\n  const { currentUser } = useAuth();\r\n  const toast = useToast();\r\n\r\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n  }, [currentUser]);\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      const q = query(\r\n        collection(db, \"stocks\"),\r\n        where(\"userId\", \"==\", currentUser.uid)\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n      const stocks = [];\r\n      for (const doc of querySnapshot.docs) {\r\n        const stock = { id: doc.id, ...doc.data() };\r\n        // Get current price for each stock\r\n        const currentPrice = await fetchStockPrice(stock.symbol);\r\n        stock.currentPrice = currentPrice;\r\n        stock.totalValue = currentPrice * stock.quantity;\r\n        stock.profitLoss =\r\n          (currentPrice - stock.purchasePrice) * stock.quantity;\r\n        stock.profitLossPercentage =\r\n          ((currentPrice - stock.purchasePrice) / stock.purchasePrice) * 100;\r\n        stocks.push(stock);\r\n      }\r\n      setPortfolio(stocks);\r\n    } catch (error) {\r\n      console.error(\"Error fetching portfolio:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch portfolio\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setLoadingPortfolio(false);\r\n    }\r\n  };\r\n\r\n  const fetchStockPrice = async (stockSymbol) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://query1.finance.yahoo.com/v8/finance/chart/${stockSymbol}`\r\n      );\r\n      return response.data.chart.result[0].meta.regularMarketPrice;\r\n    } catch (error) {\r\n      console.error(`Error fetching price for ${stockSymbol}:`, error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const searchStock = async () => {\r\n    if (!symbol) return;\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://query1.finance.yahoo.com/v8/finance/chart/${symbol}`\r\n      );\r\n      const data = response.data.chart.result[0];\r\n      setStockData({\r\n        symbol: symbol.toUpperCase(),\r\n        price: data.meta.regularMarketPrice,\r\n        change: data.meta.regularMarketChange,\r\n        changePercent: data.meta.regularMarketChangePercent,\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Invalid stock symbol or API error\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setStockData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTrade = async (type) => {\r\n    if (!stockData || !quantity) return;\r\n\r\n    try {\r\n      const tradeData = {\r\n        userId: currentUser.uid,\r\n        symbol: stockData.symbol,\r\n        quantity: Number(quantity),\r\n        purchasePrice: stockData.price,\r\n        tradeType: type,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      await addDoc(collection(db, \"stocks\"), tradeData);\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Successfully ${\r\n          type === \"buy\" ? \"bought\" : \"sold\"\r\n        } ${quantity} shares of ${stockData.symbol}`,\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      fetchPortfolio();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: `Failed to ${type} stock`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSell = async (stockId, symbol, currentPrice, quantity) => {\r\n    try {\r\n      await deleteDoc(doc(db, \"stocks\", stockId));\r\n      await addDoc(collection(db, \"stocks\"), {\r\n        userId: currentUser.uid,\r\n        symbol,\r\n        quantity: -quantity, // Negative quantity for selling\r\n        purchasePrice: currentPrice,\r\n        tradeType: \"sell\",\r\n        timestamp: new Date().toISOString(),\r\n      });\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Successfully sold ${quantity} shares of ${symbol}`,\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      fetchPortfolio();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to sell stock\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxW=\"container.lg\" py={10}>\r\n      <VStack spacing={8}>\r\n        <Heading\r\n          bgGradient=\"linear(to-r, blue.400, purple.500)\"\r\n          bgClip=\"text\"\r\n          fontSize={{ base: \"2xl\", md: \"4xl\" }}\r\n          fontWeight=\"extrabold\"\r\n        >\r\n          Stock Trading\r\n        </Heading>\r\n\r\n        <Tabs width=\"100%\" variant=\"enclosed\">\r\n          <TabList>\r\n            <Tab>Trade</Tab>\r\n            <Tab>Portfolio</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <VStack spacing={6}>\r\n                <Box width=\"100%\">\r\n                  <InputGroup size=\"lg\">\r\n                    <Input\r\n                      placeholder=\"Enter stock symbol (e.g., AAPL)\"\r\n                      value={symbol}\r\n                      onChange={(e) => setSymbol(e.target.value.toUpperCase())}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\") searchStock();\r\n                      }}\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                      <Button\r\n                        h=\"1.75rem\"\r\n                        size=\"sm\"\r\n                        onClick={searchStock}\r\n                        isLoading={loading}\r\n                      >\r\n                        <SearchIcon />\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </Box>\r\n\r\n                {stockData && (\r\n                  <Box\r\n                    p={6}\r\n                    borderRadius=\"lg\"\r\n                    boxShadow=\"xl\"\r\n                    bg={bgColor}\r\n                    border=\"1px\"\r\n                    borderColor={borderColor}\r\n                    width=\"100%\"\r\n                  >\r\n                    <VStack spacing={4}>\r\n                      <Stat textAlign=\"center\">\r\n                        <StatLabel fontSize=\"xl\">{stockData.symbol}</StatLabel>\r\n                        <StatNumber fontSize=\"3xl\">\r\n                          ${stockData.price.toFixed(2)}\r\n                        </StatNumber>\r\n                        <StatHelpText>\r\n                          <StatArrow\r\n                            type={\r\n                              stockData.change > 0 ? \"increase\" : \"decrease\"\r\n                            }\r\n                          />\r\n                          {Math.abs(stockData.changePercent).toFixed(2)}%\r\n                        </StatHelpText>\r\n                      </Stat>\r\n\r\n                      <NumberInput\r\n                        value={quantity}\r\n                        min={1}\r\n                        onChange={(value) => setQuantity(Number(value))}\r\n                      >\r\n                        <NumberInputField />\r\n                        <NumberInputStepper>\r\n                          <NumberIncrementStepper />\r\n                          <NumberDecrementStepper />\r\n                        </NumberInputStepper>\r\n                      </NumberInput>\r\n\r\n                      <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n                        Total: ${(stockData.price * quantity).toFixed(2)}\r\n                      </Text>\r\n\r\n                      <Button\r\n                        colorScheme=\"green\"\r\n                        width=\"100%\"\r\n                        onClick={() => handleTrade(\"buy\")}\r\n                      >\r\n                        Buy\r\n                      </Button>\r\n                    </VStack>\r\n                  </Box>\r\n                )}\r\n              </VStack>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <Box\r\n                borderRadius=\"lg\"\r\n                boxShadow=\"xl\"\r\n                bg={bgColor}\r\n                border=\"1px\"\r\n                borderColor={borderColor}\r\n                overflow=\"hidden\"\r\n              >\r\n                <Table variant=\"simple\">\r\n                  <Thead>\r\n                    <Tr>\r\n                      <Th>Symbol</Th>\r\n                      <Th isNumeric>Quantity</Th>\r\n                      <Th isNumeric>Purchase Price</Th>\r\n                      <Th isNumeric>Current Price</Th>\r\n                      <Th isNumeric>Total Value</Th>\r\n                      <Th isNumeric>Profit/Loss</Th>\r\n                      <Th>Action</Th>\r\n                    </Tr>\r\n                  </Thead>\r\n                  <Tbody>\r\n                    {loadingPortfolio ? (\r\n                      <Tr>\r\n                        <Td colSpan={7}>\r\n                          <Skeleton height=\"20px\" />\r\n                        </Td>\r\n                      </Tr>\r\n                    ) : (\r\n                      portfolio.map((stock) => (\r\n                        <Tr key={stock.id}>\r\n                          <Td>{stock.symbol}</Td>\r\n                          <Td isNumeric>{stock.quantity}</Td>\r\n                          <Td isNumeric>${stock.purchasePrice.toFixed(2)}</Td>\r\n                          <Td isNumeric>${stock.currentPrice.toFixed(2)}</Td>\r\n                          <Td isNumeric>${stock.totalValue.toFixed(2)}</Td>\r\n                          <Td isNumeric>\r\n                            <Badge\r\n                              colorScheme={\r\n                                stock.profitLoss >= 0 ? \"green\" : \"red\"\r\n                              }\r\n                            >\r\n                              ${stock.profitLoss.toFixed(2)} (\r\n                              {stock.profitLossPercentage.toFixed(2)}%)\r\n                            </Badge>\r\n                          </Td>\r\n                          <Td>\r\n                            <Button\r\n                              colorScheme=\"red\"\r\n                              size=\"sm\"\r\n                              onClick={() =>\r\n                                handleSell(\r\n                                  stock.id,\r\n                                  stock.symbol,\r\n                                  stock.currentPrice,\r\n                                  stock.quantity\r\n                                )\r\n                              }\r\n                            >\r\n                              Sell\r\n                            </Button>\r\n                          </Td>\r\n                        </Tr>\r\n                      ))\r\n                    )}\r\n                  </Tbody>\r\n                </Table>\r\n              </Box>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Trading;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,MAAM,EACNC,IAAI,EACJC,OAAO,EACPC,QAAQ,EACRC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,UAAU,EACVC,iBAAiB,EACjBC,IAAI,EACJC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,iBAAiB,EACjBC,KAAK,EACLC,WAAW,EACXC,gBAAgB,EAChBC,kBAAkB,EAClBC,sBAAsB,EACtBC,sBAAsB,EACtBC,IAAI,EACJC,OAAO,EACPC,SAAS,EACTC,GAAG,EACHC,QAAQ,EACRC,QAAQ,QACH,kBAAkB;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SACEC,UAAU,EACVC,MAAM,EACNC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,SAAS,QACJ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoD,SAAS,EAAEC,YAAY,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsD,OAAO,EAAEC,UAAU,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwD,QAAQ,EAAEC,WAAW,CAAC,GAAGzD,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC0D,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7D,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM;IAAE8D;EAAY,CAAC,GAAGxB,OAAO,CAAC,CAAC;EACjC,MAAMyB,KAAK,GAAGtD,QAAQ,CAAC,CAAC;EAExB,MAAMuD,OAAO,GAAGzC,iBAAiB,CAAC,OAAO,EAAE,UAAU,CAAC;EACtD,MAAM0C,WAAW,GAAG1C,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC;EAE7DtB,SAAS,CAAC,MAAM;IACdiE,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,CAAC,GAAGzB,KAAK,CACbF,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC,EACxBI,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEmB,WAAW,CAACM,GAAG,CACvC,CAAC;MACD,MAAMC,aAAa,GAAG,MAAMzB,OAAO,CAACuB,CAAC,CAAC;MACtC,MAAMG,MAAM,GAAG,EAAE;MACjB,KAAK,MAAMC,GAAG,IAAIF,aAAa,CAACG,IAAI,EAAE;QACpC,MAAMC,KAAK,GAAG;UAAEC,EAAE,EAAEH,GAAG,CAACG,EAAE;UAAE,GAAGH,GAAG,CAACI,IAAI,CAAC;QAAE,CAAC;QAC3C;QACA,MAAMC,YAAY,GAAG,MAAMC,eAAe,CAACJ,KAAK,CAACvB,MAAM,CAAC;QACxDuB,KAAK,CAACG,YAAY,GAAGA,YAAY;QACjCH,KAAK,CAACK,UAAU,GAAGF,YAAY,GAAGH,KAAK,CAACjB,QAAQ;QAChDiB,KAAK,CAACM,UAAU,GACd,CAACH,YAAY,GAAGH,KAAK,CAACO,aAAa,IAAIP,KAAK,CAACjB,QAAQ;QACvDiB,KAAK,CAACQ,oBAAoB,GACvB,CAACL,YAAY,GAAGH,KAAK,CAACO,aAAa,IAAIP,KAAK,CAACO,aAAa,GAAI,GAAG;QACpEV,MAAM,CAACY,IAAI,CAACT,KAAK,CAAC;MACpB;MACAd,YAAY,CAACW,MAAM,CAAC;IACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDpB,KAAK,CAAC;QACJsB,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,2BAA2B;QACxCC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC,SAAS;MACR5B,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAMgB,eAAe,GAAG,MAAOa,WAAW,IAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtD,KAAK,CAACuD,GAAG,CAC9B,qDAAqDF,WAAW,EAClE,CAAC;MACD,OAAOC,QAAQ,CAAChB,IAAI,CAACkB,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,kBAAkB;IAC9D,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4BO,WAAW,GAAG,EAAEP,KAAK,CAAC;MAChE,OAAO,CAAC;IACV;EACF,CAAC;EAED,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAC/C,MAAM,EAAE;IACbK,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMoC,QAAQ,GAAG,MAAMtD,KAAK,CAACuD,GAAG,CAC9B,qDAAqD1C,MAAM,EAC7D,CAAC;MACD,MAAMyB,IAAI,GAAGgB,QAAQ,CAAChB,IAAI,CAACkB,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC;MAC1CzC,YAAY,CAAC;QACXH,MAAM,EAAEA,MAAM,CAACgD,WAAW,CAAC,CAAC;QAC5BC,KAAK,EAAExB,IAAI,CAACoB,IAAI,CAACC,kBAAkB;QACnCI,MAAM,EAAEzB,IAAI,CAACoB,IAAI,CAACM,mBAAmB;QACrCC,aAAa,EAAE3B,IAAI,CAACoB,IAAI,CAACQ;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdpB,KAAK,CAAC;QACJsB,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,mCAAmC;QAChDC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;MACFpC,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiD,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,IAAI,CAACrD,SAAS,IAAI,CAACI,QAAQ,EAAE;IAE7B,IAAI;MACF,MAAMkD,SAAS,GAAG;QAChBC,MAAM,EAAE7C,WAAW,CAACM,GAAG;QACvBlB,MAAM,EAAEE,SAAS,CAACF,MAAM;QACxBM,QAAQ,EAAEoD,MAAM,CAACpD,QAAQ,CAAC;QAC1BwB,aAAa,EAAE5B,SAAS,CAAC+C,KAAK;QAC9BU,SAAS,EAAEJ,IAAI;QACfK,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MAED,MAAMvE,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC,EAAEmE,SAAS,CAAC;MACjD3C,KAAK,CAAC;QACJsB,KAAK,EAAE,SAAS;QAChBC,WAAW,EAAE,gBACXmB,IAAI,KAAK,KAAK,GAAG,QAAQ,GAAG,MAAM,IAChCjD,QAAQ,cAAcJ,SAAS,CAACF,MAAM,EAAE;QAC5CqC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;MACFvB,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdpB,KAAK,CAAC;QACJsB,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,aAAamB,IAAI,QAAQ;QACtClB,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMwB,UAAU,GAAG,MAAAA,CAAOC,OAAO,EAAEhE,MAAM,EAAE0B,YAAY,EAAEpB,QAAQ,KAAK;IACpE,IAAI;MACF,MAAMX,SAAS,CAAC0B,GAAG,CAAChC,EAAE,EAAE,QAAQ,EAAE2E,OAAO,CAAC,CAAC;MAC3C,MAAMzE,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC,EAAE;QACrCoE,MAAM,EAAE7C,WAAW,CAACM,GAAG;QACvBlB,MAAM;QACNM,QAAQ,EAAE,CAACA,QAAQ;QAAE;QACrBwB,aAAa,EAAEJ,YAAY;QAC3BiC,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;MACFjD,KAAK,CAAC;QACJsB,KAAK,EAAE,SAAS;QAChBC,WAAW,EAAE,qBAAqB9B,QAAQ,cAAcN,MAAM,EAAE;QAChEqC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;MACFvB,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdpB,KAAK,CAAC;QACJsB,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,sBAAsB;QACnCC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE1C,OAAA,CAAC5C,SAAS;IAACgH,IAAI,EAAC,cAAc;IAACC,EAAE,EAAE,EAAG;IAAAC,QAAA,eACpCtE,OAAA,CAAC3C,MAAM;MAACkH,OAAO,EAAE,CAAE;MAAAD,QAAA,gBACjBtE,OAAA,CAACvC,OAAO;QACN+G,UAAU,EAAC,oCAAoC;QAC/CC,MAAM,EAAC,MAAM;QACbC,QAAQ,EAAE;UAAEC,IAAI,EAAE,KAAK;UAAEC,EAAE,EAAE;QAAM,CAAE;QACrCC,UAAU,EAAC,WAAW;QAAAP,QAAA,EACvB;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAEVjF,OAAA,CAACjB,IAAI;QAACmG,KAAK,EAAC,MAAM;QAACC,OAAO,EAAC,UAAU;QAAAb,QAAA,gBACnCtE,OAAA,CAAChB,OAAO;UAAAsF,QAAA,gBACNtE,OAAA,CAACd,GAAG;YAAAoF,QAAA,EAAC;UAAK;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChBjF,OAAA,CAACd,GAAG;YAAAoF,QAAA,EAAC;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eAEVjF,OAAA,CAACf,SAAS;UAAAqF,QAAA,gBACRtE,OAAA,CAACb,QAAQ;YAAAmF,QAAA,eACPtE,OAAA,CAAC3C,MAAM;cAACkH,OAAO,EAAE,CAAE;cAAAD,QAAA,gBACjBtE,OAAA,CAAC7C,GAAG;gBAAC+H,KAAK,EAAC,MAAM;gBAAAZ,QAAA,eACftE,OAAA,CAAC/B,UAAU;kBAACmH,IAAI,EAAC,IAAI;kBAAAd,QAAA,gBACnBtE,OAAA,CAAC1C,KAAK;oBACJ+H,WAAW,EAAC,iCAAiC;oBAC7CC,KAAK,EAAEnF,MAAO;oBACdoF,QAAQ,EAAGC,CAAC,IAAKpF,SAAS,CAACoF,CAAC,CAACC,MAAM,CAACH,KAAK,CAACnC,WAAW,CAAC,CAAC,CAAE;oBACzDuC,UAAU,EAAGF,CAAC,IAAK;sBACjB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAEzC,WAAW,CAAC,CAAC;oBACtC;kBAAE;oBAAA4B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACFjF,OAAA,CAAC9B,iBAAiB;oBAACgH,KAAK,EAAC,QAAQ;oBAAAZ,QAAA,eAC/BtE,OAAA,CAACzC,MAAM;sBACLqI,CAAC,EAAC,SAAS;sBACXR,IAAI,EAAC,IAAI;sBACTS,OAAO,EAAE3C,WAAY;sBACrB4C,SAAS,EAAEvF,OAAQ;sBAAA+D,QAAA,eAEnBtE,OAAA,CAACX,UAAU;wBAAAyF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACR;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,EAEL5E,SAAS,iBACRL,OAAA,CAAC7C,GAAG;gBACF4I,CAAC,EAAE,CAAE;gBACLC,YAAY,EAAC,IAAI;gBACjBC,SAAS,EAAC,IAAI;gBACdC,EAAE,EAAEjF,OAAQ;gBACZkF,MAAM,EAAC,KAAK;gBACZjF,WAAW,EAAEA,WAAY;gBACzBgE,KAAK,EAAC,MAAM;gBAAAZ,QAAA,eAEZtE,OAAA,CAAC3C,MAAM;kBAACkH,OAAO,EAAE,CAAE;kBAAAD,QAAA,gBACjBtE,OAAA,CAAC7B,IAAI;oBAACiI,SAAS,EAAC,QAAQ;oBAAA9B,QAAA,gBACtBtE,OAAA,CAAC5B,SAAS;sBAACsG,QAAQ,EAAC,IAAI;sBAAAJ,QAAA,EAAEjE,SAAS,CAACF;oBAAM;sBAAA2E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAY,CAAC,eACvDjF,OAAA,CAAC3B,UAAU;sBAACqG,QAAQ,EAAC,KAAK;sBAAAJ,QAAA,GAAC,GACxB,EAACjE,SAAS,CAAC+C,KAAK,CAACiD,OAAO,CAAC,CAAC,CAAC;oBAAA;sBAAAvB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAClB,CAAC,eACbjF,OAAA,CAAC1B,YAAY;sBAAAgG,QAAA,gBACXtE,OAAA,CAACzB,SAAS;wBACRmF,IAAI,EACFrD,SAAS,CAACgD,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG;sBACrC;wBAAAyB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACF,CAAC,EACDqB,IAAI,CAACC,GAAG,CAAClG,SAAS,CAACkD,aAAa,CAAC,CAAC8C,OAAO,CAAC,CAAC,CAAC,EAAC,GAChD;oBAAA;sBAAAvB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAc,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,eAEPjF,OAAA,CAACtB,WAAW;oBACV4G,KAAK,EAAE7E,QAAS;oBAChB+F,GAAG,EAAE,CAAE;oBACPjB,QAAQ,EAAGD,KAAK,IAAK5E,WAAW,CAACmD,MAAM,CAACyB,KAAK,CAAC,CAAE;oBAAAhB,QAAA,gBAEhDtE,OAAA,CAACrB,gBAAgB;sBAAAmG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eACpBjF,OAAA,CAACpB,kBAAkB;sBAAA0F,QAAA,gBACjBtE,OAAA,CAACnB,sBAAsB;wBAAAiG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,eAC1BjF,OAAA,CAAClB,sBAAsB;wBAAAgG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACR,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV,CAAC,eAEdjF,OAAA,CAACxC,IAAI;oBAACkH,QAAQ,EAAC,IAAI;oBAACG,UAAU,EAAC,MAAM;oBAAAP,QAAA,GAAC,UAC5B,EAAC,CAACjE,SAAS,CAAC+C,KAAK,GAAG3C,QAAQ,EAAE4F,OAAO,CAAC,CAAC,CAAC;kBAAA;oBAAAvB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C,CAAC,eAEPjF,OAAA,CAACzC,MAAM;oBACLkJ,WAAW,EAAC,OAAO;oBACnBvB,KAAK,EAAC,MAAM;oBACZW,OAAO,EAAEA,CAAA,KAAMpC,WAAW,CAAC,KAAK,CAAE;oBAAAa,QAAA,EACnC;kBAED;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEXjF,OAAA,CAACb,QAAQ;YAAAmF,QAAA,eACPtE,OAAA,CAAC7C,GAAG;cACF6I,YAAY,EAAC,IAAI;cACjBC,SAAS,EAAC,IAAI;cACdC,EAAE,EAAEjF,OAAQ;cACZkF,MAAM,EAAC,KAAK;cACZjF,WAAW,EAAEA,WAAY;cACzBwF,QAAQ,EAAC,QAAQ;cAAApC,QAAA,eAEjBtE,OAAA,CAACrC,KAAK;gBAACwH,OAAO,EAAC,QAAQ;gBAAAb,QAAA,gBACrBtE,OAAA,CAACpC,KAAK;kBAAA0G,QAAA,eACJtE,OAAA,CAAClC,EAAE;oBAAAwG,QAAA,gBACDtE,OAAA,CAACjC,EAAE;sBAAAuG,QAAA,EAAC;oBAAM;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACfjF,OAAA,CAACjC,EAAE;sBAAC4I,SAAS;sBAAArC,QAAA,EAAC;oBAAQ;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC3BjF,OAAA,CAACjC,EAAE;sBAAC4I,SAAS;sBAAArC,QAAA,EAAC;oBAAc;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACjCjF,OAAA,CAACjC,EAAE;sBAAC4I,SAAS;sBAAArC,QAAA,EAAC;oBAAa;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAChCjF,OAAA,CAACjC,EAAE;sBAAC4I,SAAS;sBAAArC,QAAA,EAAC;oBAAW;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC9BjF,OAAA,CAACjC,EAAE;sBAAC4I,SAAS;sBAAArC,QAAA,EAAC;oBAAW;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC9BjF,OAAA,CAACjC,EAAE;sBAAAuG,QAAA,EAAC;oBAAM;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACRjF,OAAA,CAACnC,KAAK;kBAAAyG,QAAA,EACHzD,gBAAgB,gBACfb,OAAA,CAAClC,EAAE;oBAAAwG,QAAA,eACDtE,OAAA,CAAChC,EAAE;sBAAC4I,OAAO,EAAE,CAAE;sBAAAtC,QAAA,eACbtE,OAAA,CAACZ,QAAQ;wBAACyH,MAAM,EAAC;sBAAM;wBAAA/B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACxB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,GAELtE,SAAS,CAACmG,GAAG,CAAEpF,KAAK,iBAClB1B,OAAA,CAAClC,EAAE;oBAAAwG,QAAA,gBACDtE,OAAA,CAAChC,EAAE;sBAAAsG,QAAA,EAAE5C,KAAK,CAACvB;oBAAM;sBAAA2E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACvBjF,OAAA,CAAChC,EAAE;sBAAC2I,SAAS;sBAAArC,QAAA,EAAE5C,KAAK,CAACjB;oBAAQ;sBAAAqE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACnCjF,OAAA,CAAChC,EAAE;sBAAC2I,SAAS;sBAAArC,QAAA,GAAC,GAAC,EAAC5C,KAAK,CAACO,aAAa,CAACoE,OAAO,CAAC,CAAC,CAAC;oBAAA;sBAAAvB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACpDjF,OAAA,CAAChC,EAAE;sBAAC2I,SAAS;sBAAArC,QAAA,GAAC,GAAC,EAAC5C,KAAK,CAACG,YAAY,CAACwE,OAAO,CAAC,CAAC,CAAC;oBAAA;sBAAAvB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACnDjF,OAAA,CAAChC,EAAE;sBAAC2I,SAAS;sBAAArC,QAAA,GAAC,GAAC,EAAC5C,KAAK,CAACK,UAAU,CAACsE,OAAO,CAAC,CAAC,CAAC;oBAAA;sBAAAvB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACjDjF,OAAA,CAAChC,EAAE;sBAAC2I,SAAS;sBAAArC,QAAA,eACXtE,OAAA,CAACvB,KAAK;wBACJgI,WAAW,EACT/E,KAAK,CAACM,UAAU,IAAI,CAAC,GAAG,OAAO,GAAG,KACnC;wBAAAsC,QAAA,GACF,GACE,EAAC5C,KAAK,CAACM,UAAU,CAACqE,OAAO,CAAC,CAAC,CAAC,EAAC,IAC9B,EAAC3E,KAAK,CAACQ,oBAAoB,CAACmE,OAAO,CAAC,CAAC,CAAC,EAAC,IACzC;sBAAA;wBAAAvB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN,CAAC,eACLjF,OAAA,CAAChC,EAAE;sBAAAsG,QAAA,eACDtE,OAAA,CAACzC,MAAM;wBACLkJ,WAAW,EAAC,KAAK;wBACjBrB,IAAI,EAAC,IAAI;wBACTS,OAAO,EAAEA,CAAA,KACP3B,UAAU,CACRxC,KAAK,CAACC,EAAE,EACRD,KAAK,CAACvB,MAAM,EACZuB,KAAK,CAACG,YAAY,EAClBH,KAAK,CAACjB,QACR,CACD;wBAAA6D,QAAA,EACF;sBAED;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACP,CAAC;kBAAA,GA/BEvD,KAAK,CAACC,EAAE;oBAAAmD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAgCb,CACL;gBACF;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAAC/E,EAAA,CA1UQD,OAAO;EAAA,QAOUV,OAAO,EACjB7B,QAAQ,EAENc,iBAAiB,EACbA,iBAAiB;AAAA;AAAAuI,EAAA,GAX9B9G,OAAO;AA4UhB,eAAeA,OAAO;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}